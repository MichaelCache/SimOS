#include "basicfunc.h"
void init_palette();
void save_palette(unsigned char palette[]);
void init_screen();
void draw_windows(int x,int y,int with,int height);

#define	VRAM	0x000a0000		//VGA RAM address

void save_palette(unsigned char palette[])	//save the palette to the VGA
{
	outb(0,0x3c8);				//VGA video DAC(Digital to analog converter) PEL(picture element) address
	int i;
	for(i=0;i<=767;i+=3)
	{
		outb(palette[i]/4,0x3c9);	//VGA video DAC
		outb(palette[i+1]/4,0x3c9);
		outb(palette[i+2]/4,0x3c9);
	}
}
void init_palette()				//generate a color palette table
{
	static unsigned char palette[256*3]={
			 0xFF, 0xFF, 0xFF,	//0 white
			 0xFF, 0xFF, 0xCC,
			 0xFF, 0xFF, 0x99,
			 0xFF, 0xFF, 0x66,
			 0xFF, 0xFF, 0x33,
			 0xFF, 0xFF, 0x00,	//5 yellow
			 0xFF, 0xCC, 0xFF,
			 0xFF, 0xCC, 0xCC,
			 0xFF, 0xCC, 0x99,
			 0xFF, 0xCC, 0x66,
			 0xFF, 0xCC, 0x33,
			 0xFF, 0xCC, 0x00,
			 0xFF, 0x99, 0xFF,
			 0xFF, 0x99, 0xCC,
			 0xFF, 0x99, 0x99,
			 0xFF, 0x99, 0x66,
			 0xFF, 0x99, 0x33,
			 0xFF, 0x99, 0x00,
			 0xFF, 0x66, 0xFF,
			 0xFF, 0x66, 0xCC,
			 0xFF, 0x66, 0x99,
			 0xFF, 0x66, 0x66,
			 0xFF, 0x66, 0x33,
			 0xFF, 0x66, 0x00,
			 0xFF, 0x33, 0xFF,
			 0xFF, 0x33, 0xCC,
			 0xFF, 0x33, 0x99,
			 0xFF, 0x33, 0x66,
			 0xFF, 0x33, 0x33,
			 0xFF, 0x33, 0x00,
			 0xFF, 0x00, 0xFF,
			 0xFF, 0x00, 0xCC,
			 0xFF, 0x00, 0x99,
			 0xFF, 0x00, 0x66,
			 0xFF, 0x00, 0x33,
			 0xFF, 0x00, 0x00,	//35 red
			 0x66, 0xFF, 0xFF,
			 0x66, 0xFF, 0xCC,
			 0x66, 0xFF, 0x99,
			 0x66, 0xFF, 0x66,
			 0x66, 0xFF, 0x33,
			 0x66, 0xFF, 0x00,
			 0x66, 0xCC, 0xFF,
			 0x66, 0xCC, 0xCC,
			 0x66, 0xCC, 0x99,
			 0x66, 0xCC, 0x66,
			 0x66, 0xCC, 0x33,
			 0x66, 0xCC, 0x00,
			 0x66, 0x99, 0xFF,
			 0x66, 0x99, 0xCC,
			 0x66, 0x99, 0x99,
			 0x66, 0x99, 0x66,
			 0x66, 0x99, 0x33,
			 0x66, 0x99, 0x00,
			 0x66, 0x66, 0xFF,
			 0x66, 0x66, 0xCC,
			 0x66, 0x66, 0x99,
			 0x66, 0x66, 0x66,
			 0x66, 0x66, 0x33,
			 0x66, 0x66, 0x00,
			 0x66, 0x33, 0xFF,
			 0x66, 0x33, 0xCC,
			 0x66, 0x33, 0x99,
			 0x66, 0x33, 0x66,
			 0x66, 0x33, 0x33,
			 0x66, 0x33, 0x00,
			 0x66, 0x00, 0xFF,
			 0x66, 0x00, 0xCC,
			 0x66, 0x00, 0x99,
			 0x66, 0x00, 0x66,
			 0x66, 0x00, 0x33,
			 0x66, 0x00, 0x00,
			 0xCC, 0xFF, 0xFF,
			 0xCC, 0xFF, 0xCC,
			 0xCC, 0xFF, 0x99,
			 0xCC, 0xFF, 0x66,
			 0xCC, 0xFF, 0x33,
			 0xCC, 0xFF, 0x00,
			 0xCC, 0xCC, 0xFF,
			 0xCC, 0xCC, 0xCC,
			 0xCC, 0xCC, 0x99,
			 0xCC, 0xCC, 0x66,
			 0xCC, 0xCC, 0x33,
			 0xCC, 0xCC, 0x00,
			 0xCC, 0x99, 0xFF,
			 0xCC, 0x99, 0xCC,
			 0xCC, 0x99, 0x99,
			 0xCC, 0x99, 0x66,
			 0xCC, 0x99, 0x33,
			 0xCC, 0x99, 0x00,
			 0xCC, 0x66, 0xFF,
			 0xCC, 0x66, 0xCC,
			 0xCC, 0x66, 0x99,
			 0xCC, 0x66, 0x66,
			 0xCC, 0x66, 0x33,
			 0xCC, 0x66, 0x00,
			 0xCC, 0x33, 0xFF,
			 0xCC, 0x33, 0xCC,
			 0xCC, 0x33, 0x99,
			 0xCC, 0x33, 0x66,
			 0xCC, 0x33, 0x33,
			 0xCC, 0x33, 0x00,
			 0xCC, 0x00, 0xFF,
			 0xCC, 0x00, 0xCC,
			 0xCC, 0x00, 0x99,
			 0xCC, 0x00, 0x66,
			 0xCC, 0x00, 0x33,
			 0xCC, 0x00, 0x00,
			 0x33, 0xFF, 0xFF,
			 0x33, 0xFF, 0xCC,
			 0x33, 0xFF, 0x99,
			 0x33, 0xFF, 0x66,
			 0x33, 0xFF, 0x33,
			 0x33, 0xFF, 0x00,
			 0x33, 0xCC, 0xFF,
			 0x33, 0xCC, 0xCC,
			 0x33, 0xCC, 0x99,
			 0x33, 0xCC, 0x66,
			 0x33, 0xCC, 0x33,
			 0x33, 0xCC, 0x00,
			 0x33, 0x99, 0xFF,
			 0x33, 0x99, 0xCC,
			 0x33, 0x99, 0x99,
			 0x33, 0x99, 0x66,
			 0x33, 0x99, 0x33,
			 0x33, 0x99, 0x00,
			 0x33, 0x66, 0xFF,
			 0x33, 0x66, 0xCC,
			 0x33, 0x66, 0x99,
			 0x33, 0x66, 0x66,
			 0x33, 0x66, 0x33,
			 0x33, 0x66, 0x00,
			 0x33, 0x33, 0xFF,
			 0x33, 0x33, 0xCC,
			 0x33, 0x33, 0x99,
			 0x33, 0x33, 0x66,
			 0x33, 0x33, 0x33,
			 0x33, 0x33, 0x00,
			 0x33, 0x00, 0xFF,
			 0x33, 0x00, 0xCC,
			 0x33, 0x00, 0x99,
			 0x33, 0x00, 0x66,
			 0x33, 0x00, 0x33,
			 0x33, 0x00, 0x00,
			 0x99, 0xFF, 0xFF,
			 0x99, 0xFF, 0xCC,
			 0x99, 0xFF, 0x99,
			 0x99, 0xFF, 0x66,
			 0x99, 0xFF, 0x33,
			 0x99, 0xFF, 0x00,
			 0x99, 0xCC, 0xFF,
			 0x99, 0xCC, 0xCC,
			 0x99, 0xCC, 0x99,
			 0x99, 0xCC, 0x66,
			 0x99, 0xCC, 0x33,
			 0x99, 0xCC, 0x00,
			 0x99, 0x99, 0xFF,
			 0x99, 0x99, 0xCC,
			 0x99, 0x99, 0x99,
			 0x99, 0x99, 0x66,
			 0x99, 0x99, 0x33,
			 0x99, 0x99, 0x00,
			 0x99, 0x66, 0xFF,
			 0x99, 0x66, 0xCC,
			 0x99, 0x66, 0x99,
			 0x99, 0x66, 0x66,
			 0x99, 0x66, 0x33,
			 0x99, 0x66, 0x00,
			 0x99, 0x33, 0xFF,
			 0x99, 0x33, 0xCC,
			 0x99, 0x33, 0x99,
			 0x99, 0x33, 0x66,
			 0x99, 0x33, 0x33,
			 0x99, 0x33, 0x00,
			 0x99, 0x00, 0xFF,
			 0x99, 0x00, 0xCC,
			 0x99, 0x00, 0x99,
			 0x99, 0x00, 0x66,
			 0x99, 0x00, 0x33,
			 0x99, 0x00, 0x00,
			 0x00, 0xFF, 0xFF,	//220 cyan
			 0x00, 0xFF, 0xCC,
			 0x00, 0xFF, 0x99,
			 0x00, 0xFF, 0x66,
		     0x00, 0xFF, 0x33,
			 0x00, 0xFF, 0x00,
			 0x00, 0xCC, 0xFF,
			 0x00, 0xCC, 0xCC,
			 0x00, 0xCC, 0x99,
			 0x00, 0xCC, 0x66,
			 0x00, 0xCC, 0x33,
			 0x00, 0xCC, 0x00,
			 0x00, 0x99, 0xFF,
			 0x00, 0x99, 0xCC,
			 0x00, 0x99, 0x99,
			 0x00, 0x99, 0x66,
			 0x00, 0x99, 0x33,
			 0x00, 0x99, 0x00,
			 0x00, 0x66, 0xFF,
			 0x00, 0x66, 0xCC,
			 0x00, 0x66, 0x99,
			 0x00, 0x66, 0x66,
			 0x00, 0x66, 0x33,
			 0x00, 0x66, 0x00,
			 0x00, 0x33, 0xFF,
			 0x00, 0x33, 0xCC,
			 0x00, 0x33, 0x99,
			 0x00, 0x33, 0x66,
			 0x00, 0x33, 0x33,
			 0x00, 0x33, 0x00,
			 0x00, 0x00, 0xFF,	//250 blue
			 0x00, 0x00, 0xCC,
			 0x00, 0x00, 0x99,
			 0x00, 0x00, 0x66,
			 0x00, 0x00, 0x33,
			 0x00, 0x00, 0x00	//255 black
	};
	save_palette(palette);
}

void init_screen()
{
	unsigned char *vram=(unsigned char *)VRAM;
	int i;
	for (i=0;i<=0xf9ff;i++)		//320*200 pixels,0xfa00 pixels in total
	{
		*(vram+i)=37;			//set the pixel color to the index of palette
	}
}

void draw_windows(int x,int y,int with,int height)				//draw basic windows
{
	unsigned char *vram=(unsigned char *)VRAM;
	int i,j,start,end;
	start=y*320+x;
	end=y*320+x+with;
	for (j=1;j<=height;j++)
	{
		for (i=start;i<=end;i++)
			{
				*(vram+i)=214;	//palette upper than 214 seems doesn't work
			}
		start=(y+j)*320+x;
		end=(y+j)*320+x+with;
	}
}
